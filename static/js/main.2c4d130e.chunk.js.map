{"version":3,"sources":["Components/App/App.styled.jsx","Components/ContactsForm/ContactsForm.styled.jsx","Components/Buttons/Buttons.styled.jsx","Components/ContactsForm/ContactsForm.jsx","Components/ContactsList/ContactsList.styled.jsx","Components/ContactsList/ContactsList.jsx","Components/Filter/Filter.styled.jsx","Components/Filter/Filter.jsx","Components/App/App.js","index.js"],"names":["PrimaryTitle","styled","h1","SecondaryTitle","h2","Form","form","Label","label","Input","input","Button","button","ContactsForm","state","name","number","handleChange","e","setState","currentTarget","target","value","handleSubmit","preventDefault","onSubmit","props","this","action","htmlFor","onChange","type","pattern","title","required","Component","List","ul","ListItem","li","ContactsList","contacts","deleteId","map","contact","id","onClick","Wrapper","div","Filter","getFilterName","App","useState","setContacts","filter","setFilter","useEffect","localStorage","setItem","JSON","stringify","storageContacts","getItem","parsedContacts","parse","newContact","uuidv4","some","toLowerCase","toast","icon","style","borderRadius","background","color","duration","notification","text","lowerSymbol","includes","showContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c4d130e.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const PrimaryTitle = styled.h1`\nmargin-left: 75px;\ncolor: gray;\n`;\n\nexport const SecondaryTitle = styled.h2`\n  margin-left: 75px;\n`;","import styled from \"@emotion/styled\";\r\n\r\nexport const Form = styled.form`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin-left: 40px;\r\n  padding: 30px;\r\n  border: none;\r\n  border-radius: 4px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 4px;\r\n  margin-top: 4px;\r\n`;","import styled from \"@emotion/styled\";\r\n\r\nexport const Button = styled.button`\r\n  width: fit-content;\r\n  padding: 10px;\r\n  margin-top: 8px;\r\n  font-size: 14px;\r\n  background-color: #0eebdc;\r\n  border: none;\r\n  border-radius: 10px;\r\n  &:hover,\r\n  &:active {\r\n    cursor: pointer;\r\n    background-color: #15c2b6;\r\n  }\r\n`;","import { Component } from \"react\";\r\nimport { Form, Label, Input } from './ContactsForm.styled';\r\nimport { Button } from '../Buttons/Buttons.styled';\r\n\r\nexport class ContactsForm extends Component {\r\n    state = {\r\n        name: \"\",\r\n        number: \"\",\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.currentTarget.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { name, number } = this.state;\r\n        const { onSubmit } = this.props;\r\n\r\n        onSubmit(name, number);\r\n        this.setState({\r\n            name: \"\", number: \"\"\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { handleSubmit, handleChange } = this;\r\n        const { name, number } = this.state;\r\n        return (\r\n            <Form action=\"\" onSubmit={handleSubmit}>\r\n                <Label htmlFor=\"name\">Name</Label>\r\n                <Input\r\n                    onChange={handleChange}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                />\r\n                <Label htmlFor=\"number\">Number</Label>\r\n                <Input\r\n                    onChange={handleChange}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    value={number}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                />\r\n                <Button type=\"submit\"> Add contact</Button>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const List = styled.ul`\r\n  list-style-type: circle;\r\n  margin-left: 20px;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  margin-top: 8px;\r\n  font-size: 18px;\r\n`;","import { List, ListItem } from \"./ContactsList.styled\";\r\nimport { Button } from '../Buttons/Buttons.styled';\r\n\r\nexport const ContactsList = ({ contacts, deleteId }) => {\r\n    return (\r\n        <div>\r\n            <List>\r\n                {contacts.map((contact) => {\r\n                    const { id, name, number } = contact;\r\n                    return (\r\n                        <ListItem key={id}>\r\n                            {name} - {number}{\" \"}\r\n                            <Button type=\"button\" onClick={() => deleteId(id)}>\r\n                                Delete\r\n                            </Button>\r\n                        </ListItem>\r\n                    )\r\n                })}\r\n            </List>\r\n        </div>\r\n    );\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin-left: 60px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 4px;\r\n  margin-top: 4px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-weight: 500;\r\n`;","import { Component } from \"react\";\r\nimport { Wrapper, Label, Input } from \"./Filter.styled\";\r\n\r\nexport class Filter extends Component {\r\n    getFilterName = (e) => {\r\n        const { onChange } = this.props;\r\n\r\n        return onChange(e.currentTarget.value);\r\n    };\r\n\r\n    render() {\r\n        const { value } = this.props;\r\n        return (\r\n            <Wrapper>\r\n                <Label htmlFor=\"filter\">Find contacts by name</Label>\r\n                <Input\r\n                    type=\"text\"\r\n                    name=\"filter\"\r\n                    value={value}\r\n                    onChange={this.getFilterName}\r\n                />\r\n            </Wrapper>\r\n        );\r\n    };\r\n};\r\n","import { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { PrimaryTitle, SecondaryTitle } from \"./App.styled.jsx\";\nimport { ContactsForm } from \"../ContactsForm/ContactsForm.jsx\";\nimport { ContactsList } from \"../ContactsList/ContactsList.jsx\";\nimport { Filter } from \"../Filter/Filter.jsx\";\nimport toast, { Toaster } from \"react-hot-toast\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n  \n  useEffect(() => {\n    const storageContacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(storageContacts);\n\n    if (storageContacts) {\n      setContacts([...parsedContacts])\n    }\n  }, []);\n\n  const notification = (name) => toast(`${name} is already in contacts`, {\n    icon: \"👏\",\n    style: {\n      borderRadius: \"10px\",\n      background: \"#333\",\n      color: \"#fff\",\n      duration: 4000,\n    },\n  });\n\n  const handleFilter = (text) => {\n    setFilter(text);\n  }\n\n  const addContact = (name, number) => {\n    const newContact = { id: uuidv4(), name, number };\n\n    contacts.some(\n      (contact) => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    )\n      ? notification(newContact.name)\n      : setContacts([newContact, ...contacts]);\n  }\n\n  const showContacts = () => {\n    const lowerSymbol = filter.toLowerCase();\n    return contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(lowerSymbol)\n    );\n  };\n\n  const removeContact = (id) => {\n    setContacts(\n      contacts.filter((contact) => contact.id !== id),\n    );\n  };\n\n  return (\n      <>\n        <PrimaryTitle>Phonebook</PrimaryTitle>\n        <ContactsForm onSubmit={addContact} />\n\n        <SecondaryTitle>Contacts</SecondaryTitle>\n        <Filter onChange={handleFilter} value={filter} />\n        <ContactsList contacts={showContacts()} deleteId={removeContact} />\n        <Toaster />\n      </>\n    );\n};\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}